import React, { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "./ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "./ui/tabs";
import { RTOUpload } from "./RTOUpload";
import { BarcodeScanner } from "./BarcodeScanner";
import { RTOCalendar } from "./RTOCalendar";
import { ReportTable } from "./ReportTable";
import {
  Upload,
  Scan,
  Calendar,
  BarChart3,
  FileSpreadsheet,
  CheckCircle,
} from "lucide-react";

interface BarcodeResult {
  barcode: string;
  match: boolean;
  productName?: string;
  quantity?: number;
  price?: number;
  message: string;
  timestamp: Date;
}

interface CalendarData {
  _id: string;
  date: string;
  reconciliationSummary: {
    totalScanned: number;
    matched: number;
    unmatched: number;
  };
  uploadInfo: {
    originalFileName: string;
    uploadDate: string;
    totalRecords: number;
  };
}

export const RTODashboard: React.FC = () => {
  const [selectedDate, setSelectedDate] = useState<Date>(new Date());
  const [scanResults, setScanResults] = useState<BarcodeResult[]>([]);
  const [uploadedData, setUploadedData] = useState<any>(null);
  const [selectedCalendarData, setSelectedCalendarData] =
    useState<CalendarData | null>(null);

  const handleUploadSuccess = (data: any) => {
    setUploadedData(data);
    setSelectedDate(new Date(data.date));
  };

  const handleScanResult = (result: BarcodeResult) => {
    setScanResults((prev) => [result, ...prev]);
  };

  const handleDateSelect = (date: Date, data: CalendarData) => {
    setSelectedDate(date);
    setSelectedCalendarData(data);
  };

  return (
    <div className="container mx-auto px-4 py-8 space-y-8">

        {/* Navigation Tabs */}
        <Tabs defaultValue="upload" className="w-full">
          <TabsList className="grid w-full grid-cols-4 bg-white border border-gray-200 rounded-lg p-1">
            <TabsTrigger
              value="upload"
              className="flex items-center gap-2 data-[state=active]:bg-gray-900 data-[state=active]:text-white rounded-md transition-all duration-200"
            >
              <Upload className="h-4 w-4" />
              Upload
            </TabsTrigger>
            <TabsTrigger
              value="scan"
              className="flex items-center gap-2 data-[state=active]:bg-gray-900 data-[state=active]:text-white rounded-md transition-all duration-200"
            >
              <Scan className="h-4 w-4" />
              Scan
            </TabsTrigger>
            <TabsTrigger
              value="calendar"
              className="flex items-center gap-2 data-[state=active]:bg-gray-900 data-[state=active]:text-white rounded-md transition-all duration-200"
            >
              <Calendar className="h-4 w-4" />
              Calendar
            </TabsTrigger>
            <TabsTrigger
              value="reports"
              className="flex items-center gap-2 data-[state=active]:bg-gray-900 data-[state=active]:text-white rounded-md transition-all duration-200"
            >
              <BarChart3 className="h-4 w-4" />
              Reports
            </TabsTrigger>
          </TabsList>

          <TabsContent value="upload" className="space-y-6">
            <Card className="bg-white border border-gray-200 rounded-lg shadow-sm">
              <CardHeader className="pb-4">
                <CardTitle className="flex items-center gap-3 text-lg font-semibold text-gray-900">
                  <div className="p-2 bg-gray-100 rounded-lg">
                    <FileSpreadsheet className="h-5 w-5 text-gray-600" />
                  </div>
                  Upload Summary
                </CardTitle>
                <CardDescription className="text-gray-600">
                  {uploadedData
                    ? "RTO data successfully loaded for " + uploadedData.date
                    : "Upload an Excel file to see RTO data summary"}
                </CardDescription>
              </CardHeader>
              <CardContent className="p-6">
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                  <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                    <div className="text-2xl font-bold text-gray-900 mb-1">
                      {uploadedData ? uploadedData.totalRecords : 0}
                    </div>
                    <div className="text-sm font-medium text-gray-600">
                      Total Records
                    </div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                    <div className="text-2xl font-bold text-gray-900 mb-1">
                      {scanResults.length}
                    </div>
                    <div className="text-sm font-medium text-gray-600">
                      Scanned
                    </div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                    <div className="text-2xl font-bold text-gray-900 mb-1">
                      {scanResults.filter((r) => r.match).length}
                    </div>
                    <div className="text-sm font-medium text-gray-600">
                      Matched
                    </div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                    <div className="text-2xl font-bold text-gray-900 mb-1">
                      {scanResults.filter((r) => !r.match).length}
                    </div>
                    <div className="text-sm font-medium text-gray-600">
                      Unmatched
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <RTOUpload onUploadSuccess={handleUploadSuccess} />
          </TabsContent>

          <TabsContent value="scan" className="space-y-6">
            <Card className="bg-white border border-gray-200 rounded-lg shadow-sm">
              <CardHeader className="pb-4">
                <CardTitle className="flex items-center gap-3 text-lg font-semibold text-gray-900">
                  <div className="p-2 bg-gray-100 rounded-lg">
                    <Scan className="h-5 w-5 text-gray-600" />
                  </div>
                  Scan Summary
                </CardTitle>
                <CardDescription className="text-gray-600">
                  Real-time barcode scanning progress and results
                </CardDescription>
              </CardHeader>
              <CardContent className="p-6">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                    <div className="text-2xl font-bold text-gray-900 mb-1">
                      {scanResults.length}
                    </div>
                    <div className="text-sm font-medium text-gray-600">
                      Total Scanned
                    </div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                    <div className="text-2xl font-bold text-gray-900 mb-1">
                      {scanResults.filter((r) => r.match).length}
                    </div>
                    <div className="text-sm font-medium text-gray-600">
                      Matched
                    </div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                    <div className="text-2xl font-bold text-gray-900 mb-1">
                      {scanResults.filter((r) => !r.match).length}
                    </div>
                    <div className="text-sm font-medium text-gray-600">
                      Unmatched
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <BarcodeScanner
              selectedDate={selectedDate}
              onScanResult={handleScanResult}
            />
          </TabsContent>

          <TabsContent value="calendar" className="space-y-8">
            <RTOCalendar
              selectedDate={selectedDate}
              onDateSelect={handleDateSelect}
            />
          </TabsContent>

          <TabsContent value="reports" className="space-y-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <Card className="bg-white border border-gray-200 rounded-lg shadow-sm">
                <CardHeader className="pb-4">
                  <CardTitle className="flex items-center gap-3 text-lg font-semibold text-gray-900">
                    <div className="p-2 bg-gray-100 rounded-lg">
                      <BarChart3 className="h-5 w-5 text-gray-600" />
                    </div>
                    Today's Reconciliation
                  </CardTitle>
                  <CardDescription className="text-gray-600">
                    Current status for {selectedDate.toLocaleDateString()}
                  </CardDescription>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                      <div className="text-2xl font-bold text-gray-900 mb-1">
                        {scanResults.length}
                      </div>
                      <div className="text-sm font-medium text-gray-600">
                        Total Scanned
                      </div>
                    </div>
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                      <div className="text-2xl font-bold text-gray-900 mb-1">
                        {scanResults.filter((r) => r.match).length}
                      </div>
                      <div className="text-sm font-medium text-gray-600">
                        Matched
                      </div>
                    </div>
                    <div className="bg-gray-50 p-4 rounded-lg border border-gray-200 text-center">
                      <div className="text-2xl font-bold text-gray-900 mb-1">
                        {scanResults.filter((r) => !r.match).length}
                      </div>
                      <div className="text-sm font-medium text-gray-600">
                        Unmatched
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card className="bg-white border border-gray-200 rounded-lg shadow-sm">
                <CardHeader className="pb-4">
                  <CardTitle className="flex items-center gap-3 text-lg font-semibold text-gray-900">
                    <div className="p-2 bg-gray-100 rounded-lg">
                      <CheckCircle className="h-5 w-5 text-gray-600" />
                    </div>
                    Recent Activity
                  </CardTitle>
                  <CardDescription className="text-gray-600">
                    Latest barcode scans and reconciliation results
                  </CardDescription>
                </CardHeader>
                <CardContent className="p-6">
                  <div className="space-y-3 max-h-64 overflow-y-auto">
                    {scanResults.slice(0, 10).map((result, index) => (
                      <div
                        key={index}
                        className="flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg hover:bg-gray-100 transition-all duration-200"
                      >
                        <div>
                          <code className="text-sm font-mono bg-gray-200 px-2 py-1 rounded font-medium">
                            {result.barcode}
                          </code>
                          <div className="text-xs text-gray-500 mt-1">
                            {result.timestamp.toLocaleTimeString()}
                          </div>
                        </div>
                        <div
                          className={
                            result.match
                              ? "px-2 py-1 rounded text-xs font-medium bg-green-100 text-green-800"
                              : "px-2 py-1 rounded text-xs font-medium bg-red-100 text-red-800"
                          }
                        >
                          {result.match ? "Matched" : "Unmatched"}
                        </div>
                      </div>
                    ))}
                    {scanResults.length === 0 && (
                      <div className="text-center text-gray-500 py-8">
                        <div className="p-4 bg-gray-200 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center">
                          <CheckCircle className="h-8 w-8 text-gray-400" />
                        </div>
                        <p className="text-lg font-medium">No scans yet</p>
                        <p className="text-sm">
                          Start scanning barcodes to see results here
                        </p>
                      </div>
                    )}
                  </div>
                </CardContent>
              </Card>
            </div>

            <ReportTable data={scanResults} selectedDate={selectedDate} />
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};
