module.exports = {
  apps: [
    {
      name: "rto-application",
      script: "node",
      args: "-e \"const { spawn } = require('child_process'); const path = require('path'); console.log('ðŸš€ Starting RTO Application (Combined Mode)...'); const backend = spawn('node', ['server/src/index.js'], { cwd: '/Users/shubhankarhaldar/Desktop/rto', env: { ...process.env, NODE_ENV: 'production', PORT: 5003, DB_HOST: '31.97.61.5', DB_PORT: 3306, DB_USER: 'rto', DB_PASSWORD: 'Kalbazaar@177', DB_NAME: 'rto_db' }, stdio: ['pipe', 'pipe', 'pipe'] }); const frontend = spawn('npm', ['run', 'preview'], { cwd: '/Users/shubhankarhaldar/Desktop/rto/client', env: { ...process.env, NODE_ENV: 'production', PORT: 4173 }, stdio: ['pipe', 'pipe', 'pipe'] }); backend.stdout.on('data', (data) => console.log('[Backend]', data.toString().trim())); backend.stderr.on('data', (data) => console.error('[Backend Error]', data.toString().trim())); frontend.stdout.on('data', (data) => console.log('[Frontend]', data.toString().trim())); frontend.stderr.on('data', (data) => console.error('[Frontend Error]', data.toString().trim())); backend.on('close', (code) => { console.log('Backend process exited with code', code); if (code !== 0) { console.log('Restarting backend in 3 seconds...'); setTimeout(() => { const newBackend = spawn('node', ['server/src/index.js'], { cwd: '/Users/shubhankarhaldar/Desktop/rto', env: { ...process.env, NODE_ENV: 'production', PORT: 5003, DB_HOST: '31.97.61.5', DB_PORT: 3306, DB_USER: 'rto', DB_PASSWORD: 'Kalbazaar@177', DB_NAME: 'rto_db' }, stdio: ['pipe', 'pipe', 'pipe'] }); newBackend.stdout.on('data', (data) => console.log('[Backend]', data.toString().trim())); newBackend.stderr.on('data', (data) => console.error('[Backend Error]', data.toString().trim())); }, 3000); } }); frontend.on('close', (code) => { console.log('Frontend process exited with code', code); if (code !== 0) { console.log('Restarting frontend in 3 seconds...'); setTimeout(() => { const newFrontend = spawn('npm', ['run', 'preview'], { cwd: '/Users/shubhankarhaldar/Desktop/rto/client', env: { ...process.env, NODE_ENV: 'production', PORT: 4173 }, stdio: ['pipe', 'pipe', 'pipe'] }); newFrontend.stdout.on('data', (data) => console.log('[Frontend]', data.toString().trim())); newFrontend.stderr.on('data', (data) => console.error('[Frontend Error]', data.toString().trim())); }, 3000); } }); process.on('SIGINT', () => { console.log('Shutting down...'); backend.kill('SIGTERM'); frontend.kill('SIGTERM'); process.exit(0); }); process.on('SIGTERM', () => { console.log('Shutting down...'); backend.kill('SIGTERM'); frontend.kill('SIGTERM'); process.exit(0); });\"",
      cwd: "/Users/shubhankarhaldar/Desktop/rto",
      instances: 1,
      exec_mode: "fork",
      env: {
        NODE_ENV: "production",
        PORT: 5003,
        FRONTEND_PORT: 4173,
        DB_HOST: "31.97.61.5",
        DB_PORT: 3306,
        DB_USER: "rto",
        DB_PASSWORD: "Kalbazaar@177",
        DB_NAME: "rto_db",
      },
      env_production: {
        NODE_ENV: "production",
        PORT: 5003,
        FRONTEND_PORT: 4173,
        DB_HOST: "31.97.61.5",
        DB_PORT: 3306,
        DB_USER: "rto",
        DB_PASSWORD: "Kalbazaar@177",
        DB_NAME: "rto_db",
      },
      log_file: "./logs/combined-combined.log",
      out_file: "./logs/combined-out.log",
      error_file: "./logs/combined-error.log",
      log_date_format: "YYYY-MM-DD HH:mm:ss Z",
      merge_logs: true,
      max_memory_restart: "1G",
      node_args: "--max-old-space-size=1024",
      restart_delay: 4000,
      max_restarts: 10,
      min_uptime: "10s",
      watch: false,
      ignore_watch: ["node_modules", "logs", "uploads", "client/dist"],
      kill_timeout: 5000,
      wait_ready: true,
      listen_timeout: 10000,
    },
  ],
};
